{"version":3,"sources":["components/Navbar.js","components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","href","alt","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","icon","faBars","style","color","id","Header","strings","typeSpeed","backSpeed","loop","App","params","particles","number","value","density","enable","value_area","shape","stroke","width","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gNAoDeA,EA7CA,WACX,OACI,qBAAKC,UAAU,+CAAf,SACR,sBAAKA,UAAU,YAAf,UAEE,mBAAGA,UAAU,eAAeC,KAAK,IAAjC,SAAqC,qBAAKD,UAAU,OAAsBE,IAAI,WAC9E,wBAAQF,UAAU,iBAAiBG,KAAK,SAASC,cAAY,WAAWC,cAAY,0BAA0BC,gBAAc,yBAAyBC,gBAAc,QAAQC,aAAW,oBAAtL,SACE,cAAC,IAAD,CAAiBC,KAAMC,IAAQC,MAAO,CAAEC,MAAO,YAGjD,qBAAKZ,UAAU,2BAA2Ba,GAAG,yBAA7C,SACE,qBAAIb,UAAU,qBAAd,UACE,oBAAIA,UAAU,kBAAd,SACE,oBAAGA,UAAU,WAAWC,KAAK,IAA7B,kBAAsC,sBAAMD,UAAU,UAAhB,4BAExC,oBAAIA,UAAU,WAAd,SACE,mBAAGA,UAAU,WAAWC,KAAK,IAA7B,wBAGF,oBAAID,UAAU,WAAd,SACE,mBAAGA,UAAU,WAAWC,KAAK,IAA7B,wBAGF,oBAAID,UAAU,WAAd,SACE,mBAAGA,UAAU,WAAWC,KAAK,IAA7B,wBAGF,oBAAID,UAAU,WAAd,SACE,mBAAGA,UAAU,WAAWC,KAAK,IAA7B,yBAGF,oBAAID,UAAU,WAAd,SACE,mBAAGA,UAAU,WAAWC,KAAK,IAA7B,kC,iBCbOa,EAvBA,WACX,OACI,qBAAKd,UAAU,gBAAf,SAEA,sBAAKA,UAAW,YAAhB,UACI,gDACA,cAAC,IAAD,CAEIA,UAAU,aACVe,QAAS,CAAC,aAAc,cAAe,kBACvCC,UAAW,GACXC,UAAW,GACXC,MAAI,IAER,mBAAGjB,KAAK,IAAID,UAAW,iBAAvB,8B,iBCoBGmB,MA/Bf,WACE,OACE,qCACA,cAAC,IAAD,CACMC,OAAQ,CACNC,UAAW,CACTC,OAAO,CACLC,MAAO,GACPC,QAAQ,CACNC,QAAQ,EACRC,WAAY,MAGhBC,MAAO,CACLxB,KAAM,SACNyB,OAAQ,CACNC,MAAO,EACPjB,MAAO,gBAQrB,cAAC,EAAD,IACA,cAAC,EAAD,QCpBWkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.7fff08ae.chunk.js","sourcesContent":["import React from 'react'\r\n//import logo from '../logo.PNG'\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faBars } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-dark\">\r\n<div className=\"container\">\r\n    \r\n  <a className=\"navbar-brand\" href=\"#\"><img className=\"logo\" /*src={logo}*/ alt=\"logo\"/></a>\r\n  <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    <FontAwesomeIcon icon={faBars} style={{ color: \"#fff\"}}/>\r\n  </button>\r\n\r\n  <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n    <ul className=\"navbar-nav ml-auto\">\r\n      <li className=\"nav-item active\">\r\n        <a className=\"nav-link\" href=\"#\">Home <span className=\"sr-only\">(current)</span></a>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <a className=\"nav-link\" href=\"#\">About me</a>\r\n      </li>\r\n\r\n      <li className=\"nav-item\">\r\n        <a className=\"nav-link\" href=\"#\">Services</a>\r\n      </li>\r\n\r\n      <li className=\"nav-item\">\r\n        <a className=\"nav-link\" href=\"#\">how work</a>\r\n      </li>\r\n\r\n      <li className=\"nav-item\">\r\n        <a className=\"nav-link\" href=\"#\">portfolio</a>\r\n      </li>\r\n\r\n      <li className=\"nav-item\">\r\n        <a className=\"nav-link\" href=\"#\">contact</a>\r\n      </li>\r\n\r\n\r\n      \r\n    </ul>\r\n    \r\n  </div>\r\n  </div>\r\n</nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\"\r\nimport Typed from \"react-typed\";\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className=\"header-wraper\">\r\n\r\n        <div className= \"main-info\">\r\n            <h1>this is header</h1>\r\n            <Typed \r\n\r\n                className=\"typed-text\"\r\n                strings={[\"web design\", \"development\", \"lots of things\"]}\r\n                typeSpeed={40}\r\n                backSpeed={60}\r\n                loop\r\n            />\r\n            <a href=\"#\" className={\"btn-main-offer\"}>Contact me</a>\r\n\r\n            \r\n        </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport './App.css';\nimport NavBar from './components/Navbar'\nimport Header from\"./components/Header\";\nimport Particles from 'react-particles-js';\n\nfunction App() {\n  return (\n    <>\n    <Particles \n          params={{\n            particles: {\n              number:{\n                value: 30,\n                density:{\n                  enable: true,\n                  value_area: 900\n                }\n              },\n              shape: {\n                type: \"circle\",\n                stroke: {\n                  width: 6,\n                  color: \"#f9ab00\"\n                }\n              }\n\n            }\n          }}\n    \n    />\n    <NavBar />\n    <Header />\n    </>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}